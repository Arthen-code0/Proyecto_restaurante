-- Actualizacion de datos
UPDATE umamihouseapp_pedido
SET estado = 2 
WHERE id = 1;
-- Eliminacion de datos
DELETE FROM umamihouseapp_user 
WHERE id = 1;
-- Insercion de datos
INSERT INTO umamihouseapp_user (id, nombre)
VALUES (1, 'joseluis');

-- =============================================
-- Script para agregar columnas de fecha y triggers
-- a todas las tablas de UMAMI HOUSE
-- =============================================

-- 1. Tabla UMAMIHOUSEAPP_CLIENTE
ALTER TABLE UMAMIHOUSEAPP_CLIENTE ADD (
    FECHA_CREACION TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    FECHA_MODIFICACION TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL
);

CREATE OR REPLACE TRIGGER TRG_UMAMIHOUSEAPP_CLIENTE_UPDATE
BEFORE UPDATE ON UMAMIHOUSEAPP_CLIENTE
FOR EACH ROW
BEGIN
    :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
END;


-- 2. Tabla UMAMIHOUSEAPP_PEDIDO
ALTER TABLE UMAMIHOUSEAPP_PEDIDO ADD (
    FECHA_CREACION TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    FECHA_MODIFICACION TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL
);

CREATE OR REPLACE TRIGGER TRG_UMAMIHOUSEAPP_PEDIDO_UPDATE
BEFORE UPDATE ON UMAMIHOUSEAPP_PEDIDO
FOR EACH ROW
BEGIN
    :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
END;


-- 3. Tabla UMAMIHOUSEAPP_PEDIDOLINEA
ALTER TABLE UMAMIHOUSEAPP_PEDIDOLINEA ADD (
    FECHA_CREACION TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    FECHA_MODIFICACION TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL
);

CREATE OR REPLACE TRIGGER TRG_UMAMIHOUSEAPP_PEDIDOLINEA_UPDATE
BEFORE UPDATE ON UMAMIHOUSEAPP_PEDIDOLINEA
FOR EACH ROW
BEGIN
    :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
END;


-- 4. Tabla UMAMIHOUSEAPP_PLATO
ALTER TABLE UMAMIHOUSEAPP_PLATO ADD (
    FECHA_CREACION TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    FECHA_MODIFICACION TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL
);

CREATE OR REPLACE TRIGGER TRG_UMAMIHOUSEAPP_PLATO_UPDATE
BEFORE UPDATE ON UMAMIHOUSEAPP_PLATO
FOR EACH ROW
BEGIN
    :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
END;


-- 5. Tabla UMAMIHOUSEAPP_USER
ALTER TABLE UMAMIHOUSEAPP_USER ADD (
    FECHA_CREACION TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    FECHA_MODIFICACION TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL
);

CREATE OR REPLACE TRIGGER TRG_UMAMIHOUSEAPP_USER_UPDATE
BEFORE UPDATE ON UMAMIHOUSEAPP_USER
FOR EACH ROW
BEGIN
    :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
END;


-- 6. Tabla UMAMIHOUSEAPP_USER_GROUPS
ALTER TABLE UMAMIHOUSEAPP_USER_GROUPS ADD (
    FECHA_CREACION TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    FECHA_MODIFICACION TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL
);

CREATE OR REPLACE TRIGGER TRG_UMAMIHOUSEAPP_USER_GROUPS_UPDATE
BEFORE UPDATE ON UMAMIHOUSEAPP_USER_GROUPS
FOR EACH ROW
BEGIN
    :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
END;


-- 7. Tabla UMAMIHOUSEAPP_USER_USER_PE9A36
ALTER TABLE UMAMIHOUSEAPP_USER_USER_PE9A36 ADD (
    FECHA_CREACION TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    FECHA_MODIFICACION TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL
);

CREATE OR REPLACE TRIGGER TRG_UMAMIHOUSEAPP_USER_USER_PE9A36_UPDATE
BEFORE UPDATE ON UMAMIHOUSEAPP_USER_USER_PE9A36
FOR EACH ROW
BEGIN
    :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
END;


-- 8.Tabla UMAMIHOUSEAPP_MESA
ALTER TABLE UMAMIHOUSEAPP_MESA ADD (
    FECHA_CREACION TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    FECHA_MODIFICACION TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL
);

CREATE OR REPLACE TRIGGER TRG_UMAMIHOUSEAPP_MESA_UPDATE
BEFORE UPDATE ON UMAMIHOUSEAPP_MESA
FOR EACH ROW
BEGIN
    :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
END;


-- Creacion de la tabla en el cual se almacena el procedimiento
CREATE TABLE total_ventas_por_dia (
    fecha DATE PRIMARY KEY,
    total_ventas NUMBER(10, 2)
);

-- Creacion del procedimiento
CREATE OR REPLACE PROCEDURE calcular_total_ventas_por_dia AS
BEGIN
    -- Eliminar registros previos (opcional)
    DELETE FROM total_ventas_por_dia;

    -- Insertar nuevos totales por d√≠a
    INSERT INTO total_ventas_por_dia (fecha, total_ventas)
    SELECT
        TRUNC(p.fecha),
        SUM(pl.precio_total)
    FROM umamihouseapp_pedido p
    JOIN umamihouseapp_pedidolinea pl ON p.id = pl.pedido_id
    GROUP BY TRUNC(p.fecha);

    COMMIT;
END;

-- Para ver el resultado del procedimiento
BEGIN
    calcular_total_ventas_por_dia;
END;
